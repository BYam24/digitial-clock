@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

*{
  margin: 0;
  padding: 0;
  font-family: 'Poppins', 'sans-serif';
  box-sizing: 'border-box';
}
/* height: 100vh = 100% of the viewport height

height: 100% = 100% of the parent's element height

That is why you need to add height: 100% on html and body, as they don't have a size by default

Something you have to know : if you use % for vertical margin or padding, % will be calculated on the width of the parent element, not the height.

Tip : try using vh and vw units for font size :) I like this one (not supported in some browsers I know) : font-size: calc(.5vh + .5vw); (for example) */

.hero{
  width: 100%;
  height: 100vh;
  background: linear-gradient(45deg, #08001f, #30197d);
  color: #fff;
  position: relative;

}

.container{
  width: 800px;
  height: 180px;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);

}

.clock{
  width: 100%;
  height: 100%;
  background: rgba(235, 0, 255, 0.11);
  border-radius: 10px;
  display: flex;
  align-items: center; /* align item to be in the vertical center of the flex */
  justify-content: center;  /* align item to be in the horizontal center of the flex*/
  backdrop-filter: blur(40px);
  -webkit-backdrop-filter: blur(40px);/* this is the blur for safari */
}


/* The ::before and ::after pseudo-elements in CSS allow you to insert content before or after an element's actual content in the DOM (Document Object Model). They are used to add decorative elements or content that is not part of the actual HTML structure but is purely presentational. */
.container::before{
  content: '';
  width: 180px;
  height: 180px;
  background: #f41b75;
  border-radius: 5px;
  position: absolute;
  left: -50px;
  top: -50px;
  z-index: -1; /* z-index is a CSS property that controls the stacking order of positioned elements. It specifies the z-axis position of an element and determines whether it appears in front of or behind other elements.*/

}

.container::after{
  content: '';
  width: 180px;
  height: 180px;
  background: #419aff;
  border-radius: 50%;
  position: absolute;
  right: -30px; /* From the right side, move more right by 30*/
  bottom: -50px;
  z-index: -1;
}

.clock span{
  font-size: 80px;
  width: 110px;
  display: inline-block;
  text-align: center;
  position: relative;
}

.clock span::after{
  font-size: 16px;
  position: absolute;
  bottom: -5px;
  left: 50%;
  transform: translateX(-50%);
}

#hrs::after{
  content: 'Hours';
}

#min::after{
  content: 'MINS';
}

#sec::after{
  content: 'SEC';
}

